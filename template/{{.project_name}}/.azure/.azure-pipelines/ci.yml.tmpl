name: CI

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  groupName: group_name # Azure Library Group name

jobs:
  - job: ci
    displayName: CI
    steps:
      # Checkout code
      - checkout: self
        displayName: Checkout code

      # Extract secrets from Azure Key Vault
      - task: AzureKeyVault@2
        inputs:
          azureSubscription: azure_subscription_name
          KeyVaultName: key_vault_name
          SecretsFilter: DATABRICKS-CLIENT-ID,DATABRICKS-CLIENT-SECRET
        displayName: Extract secrets from Azure Key Vault

      # Install uv
      - script: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
        displayName: Install uv

      # Install Databricks CLI
      - script: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sudo sh
          databricks version
        displayName: Install Databricks CLI

      # Install development environment from uv.lock
      - script: |
          uv sync --frozen
        displayName: Install development environment from uv.lock

      # Run formatting checks
      - script: |
          set -e
          echo "Running ruff"
          uv run ruff check --output-format=concise .
          echo "Running mypy"
          uv run mypy .
          echo "Running pydoclint"
          uv run pydoclint .
          echo "Formatting checks passed ✅"
        displayName: Run formatting checks

      # Build and validate package
      - script: |
          set -e
          echo "Building package"
          uv build
          echo "Unpacking package"
          tar -xvzf dist/{{template `package_name` .}}-*.tar.gz
          echo "Validating package"
          diff -r -x __pycache__ src {{template `package_name` .}}-*/src
          echo "Package validated ✅"
        displayName: Build and validate package

      # Run unit tests
      - script: |
          set -e
          uv run pytest -v tests --cov=src --cov-report=term
          echo "Unit tests passed ✅"
        displayName: Run unit tests
        env:
          PYTHONPATH: $(Build.SourcesDirectory)/src
          DATABRICKS_HOST: $(DATABRICKS-HOST) # from DevOps Library
          DATABRICKS_CLIENT_ID: $(DATABRICKS-CLIENT-ID)
          DATABRICKS_CLIENT_SECRET: $(DATABRICKS-CLIENT-SECRET)

      - script: |
          databricks bundle validate --target test
        displayName: Validate bundle to test environment
        env:
          DATABRICKS_HOST: $(DATABRICKS-HOST) # from DevOps Library
          DATABRICKS_CLIENT_ID: $(DATABRICKS-CLIENT-ID)
          DATABRICKS_CLIENT_SECRET: $(DATABRICKS-CLIENT-SECRET)
