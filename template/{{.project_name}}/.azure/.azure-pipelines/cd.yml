name: CD

# Before using this pipeline:
# 1. Update variables: groupName, environmentName, keyVaultName, azureSubscription
# 2. Create Library Groups in Azure DevOps: {groupName}_test and {groupName}_prod, store DATABRICKS_HOST
# 3. Create Environments in Azure DevOps: {environmentName}_test and {environmentName}_prod
# 4. Add approvers to {environmentName}_prod environment
# 5. Store secrets in Azure Key Vault: DATABRICKS_CLIENT_ID, DATABRICKS_CLIENT_SECRET

trigger:
  tags:
    include:
      - 'v*'

pool:
  vmImage: ubuntu-latest

variables:
  groupName: group_name # Azure Library Group name
  environmentName: environment_name # Azure DevOps Environment name
  keyVaultName: key_vault_name # Azure Key Vault name
  azureSubscription: azure_subscription_name # Service Principal name

stages:
  - stage: deploy_test
    displayName: Deploy Databricks Asset Bundle to test environment
    jobs:
      - deployment: deploy_Databricks_Asset_Bundle_test
        displayName: Deploy Databricks Asset Bundle to `test`
        variables:
          - group: ${{ variables.groupName }}_test
        environment: ${{ variables.environmentName }}_test
        strategy:
          runOnce:
            deploy:
              steps:
                - template: templates/cd-template.yml
                  parameters:
                    azureSubscription: ${{ variables.azureSubscription }}_test
                    deployTarget: test

  - stage: wait_for_approval
    displayName: Manual validation
    dependsOn: deploy_test
    jobs:
      - job: manual_validation
        pool: server
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 720 # 12 hours
            inputs:
              instructions: "Please approve promotion to **production**."
              notifyUsers: |
                someone@example.com
                another@example.com
            displayName: Manual validation

  - stage: deploy_prod
    displayName: Deploy Databricks Asset Bundle to prod environment
    dependsOn: wait_for_approval
    jobs:
      - deployment: deploy_Databricks_Asset_Bundle_prod
        displayName: Deploy Databricks Asset Bundle to `prod`
        variables:
          - group: ${{ variables.groupName }}_prod
        environment: ${{ variables.environmentName }}_prod
        strategy:
          runOnce:
            deploy:
              steps:
                - template: templates/cd-template.yml
                  parameters:
                    azureSubscription: ${{ variables.azureSubscription }}_prod
                    deployTarget: prod
