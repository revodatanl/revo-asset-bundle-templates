name: CI

trigger: none

pool:
  vmImage: ubuntu-latest

jobs:
  - job: ci
    displayName: CI
    steps:
      # Checkout code
      - checkout: self
        displayName: Checkout code

      # Install uv
      - script: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
        displayName: Install uv

      # Install dev dependencies
      - script: |
          uv sync --group dev
        displayName: Install dev dependencies

      # Run formatting checks
      - script: |
          set -e
          echo "Running ruff"
          uv run ruff check --output-format=github .
          echo "Running mypy"
          uv run mypy .
          echo "Running pydoclint"
          uv run pydoclint .
          echo "Running sqlfluff"
          uv run sqlfluff lint .
          echo "Formatting checks passed âœ…"
        displayName: Run formatting checks

      # Build and validate package
      - script: |
          set -e
          echo "Building package"
          uv build
          echo "Unpacking package"
          tar -xvzf dist/{{.package_name}}-*.tar.gz
          echo "Validating package"
          diff -r -x __pycache__ src {{.package_name}}-*/src
          echo "Package validated âœ…"
        displayName: Build and validate package

      # Run unit tests
      - script: |
          set -e
          uv run pytest -v tests \
            --cov=src \
            --cov-report=term \
            --cov-report=xml:coverage.xml \
            --junit-xml=test-results.xml
          echo "Unit tests passed âœ…"
        displayName: Run unit tests
        env:
          PYTHONPATH: $(Build.SourcesDirectory)/src

      # Publish test results
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        displayName: "Publish test results ðŸ“ˆ"
        inputs:
          testResultsFormat: "JUnit"
          testResultsFiles: "test-results.xml"
          testRunTitle: "Unit Test Results"
          searchFolder: "$(System.DefaultWorkingDirectory)"
          mergeTestResults: true

      # Publish code coverage results
      - task: PublishCodeCoverageResults@2
        displayName: "Publish coverage report ðŸ“„"
        condition: succeededOrFailed()
        inputs:
          codeCoverageTool: "Cobertura"
          summaryFileLocation: "$(System.DefaultWorkingDirectory)/coverage.xml"
          reportDirectory: "$(System.DefaultWorkingDirectory)"
